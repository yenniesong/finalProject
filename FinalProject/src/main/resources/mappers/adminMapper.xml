<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="adminDao">
  <!-- SQL 문장을 관리하는 파일 
  	- namespace : 맵퍼파일끼리 구분하는 이름, 다른 Mapper 파일과 이름 중복안됨
  	- <select> <insert> <update> <delete> 등 쿼리문에 대한 태그가 존재
  	- 태그들에게 id를 부여하여 외부에서 호출할때 "맵퍼이름.id" 로 탐색
  -->
  
  <!-- 
  	parameterType =""     : 쿼리 문장을 실행할때 외부로부터 받은 필요한 데이터
  	resultType =""        : 쿼리 문장을 실행할때 출력되는 결과 데이터
  
   -->
  
<!--   	<select id="getTime" resultType="String"> -->
<!--   		select sysdate from dual -->
<!--   	</select> -->
  	
  	<select id="userLogin" parameterType="admin" resultType="admin">
  		SELECT * FROM users WHERE userid = #{userid} 
  		AND password= #{password}
<!--   		<if test="password != null"> -->
<!--   		</if> -->
  	</select>
  	
  	<select id="idCheck" parameterType="admin" resultType="admin">
  		SELECT * FROM users WHERE userid = #{userid} 
  	</select>
  	
  	<insert id="userInsert" parameterType="admin">
  		INSERT INTO users 
  		VALUES ( seq_userId.nextval,#{userid}, #{password}, #{username}, #{usergender})

  	</insert>
  	
  	
	<select id="getBookList" parameterType="admin" resultType="admin">
		select * from books 
		<where>
		<if test="bookSearch!=null">
			${topSelect} like '%${bookSearch}%'
		</if>

		</where>		
		order by bookid 
		
		<!-- where 조건이 한개 이상일때 위에 처럼 <where>를 이용해서 고쳐준다 -->
<!-- 		<if test="booktitle != null"> -->
<!-- 			where booktitle = #{booktitle} -->
<!-- 		</if> -->
<!-- 		<if test="bookauthor != null"> -->
<!-- 			where bookauthor = #{bookauthor} -->
<!-- 		</if> -->
	
	</select >
		
	<update id="userUpdate" parameterType="admin">
	
	update users set password = #{newpass} where password= #{password}
	</update>
	
		<select id="getAllList" resultType="admin">
  		SELECT * FROM books order by bookid
  	</select>
  	
  	<update id="changeInfo" parameterType="admin">
	
	update books set bookstatement = 'Y', rentalDue = '' where bookid= #{bookid}
	
	</update>	
	
	
	<insert id="userReservation" parameterType="admin">
  		INSERT INTO bookinginfo
  		VALUES (#{bookid}, #{bookingName}, #{bookingTel}, 
  		#{rentalDue},#{rentalPeriod},#{booktitle},#{bookauthor})
	

  	</insert>
  	
  	<delete id="bookingDelete" parameterType="admin">
  	delete from bookinginfo where bookingid = #{bookid}
  	
  	</delete>
  		
	<update id="bookingUpdate" parameterType="admin">
	
	update books set bookstatement = 'N', rentalDue = #{rentalDue} where bookid = #{bookid} 
	
	</update>
	
	<insert id="insertPost" parameterType="admin">
  		INSERT INTO adminPost 
  		VALUES ( seq_postId.nextval, #{postTitle}, #{postPass}, #{postContent}, 
  		sysdate, 0 )

  	</insert>
	
	<update id="newBoardSave" parameterType="admin">
	
	update adminPost set postTitle = #{postTitle}, postContent = #{postContent} where postId = #{postId} 
	
	</update>
	
	
	<select id="getBoardList" resultType="admin">
  		SELECT POSTID
  			 , POSTTITLE
  			 , POSTCONTENT
  			 , TO_CHAR(postdate, 'YYYY-MM-DD') as POSTDATE
  			 , POSTCNT
  			 
  		 FROM adminPost order by postId desc
  	</select>
  	
  	<select id="getViewList" parameterType="admin" resultType="admin">
  	SELECT POSTID
  			 , POSTTITLE
  			 , POSTPASS
  			 , POSTCONTENT
  			 , TO_CHAR(postdate, 'YYYY-MM-DD') as POSTDATE
  			 , POSTCNT
  			 
  		 FROM adminPost where postId= #{postId} order by postId desc
  	</select>
  	
  	<update id="updateCnt" parameterType="admin">
	
	update adminPost set postCnt = postCnt + 1 where postId = #{postId} 
	
	</update>
	  	
    	
  	<insert id="insertComment" parameterType="admin">
  		INSERT INTO usercomment 
  		VALUES ( seq_commentId.nextval, #{postId}, #{writer}, 
  		#{content}, sysdate, #{secretCheck} )

  	</insert>
  	
  	<select id="getCommentList" resultType="admin">
  		SELECT commentId
  			 , postId
  			 , writer
  			 , content
  			 , TO_CHAR(regDate, 'YYYY-MM-DD') as regDate
  			 , secretCheck
  			   			 
  		 FROM usercomment order by commentId desc
  	</select>
  	
  	<delete id="commentDelete" parameterType="admin">
  	delete from usercomment where commentId = #{commentId}
  	</delete>
  	
  	<update id="commentEdit" parameterType="admin">
	
	update usercomment set CONTENT = #{content} where commentId = #{commentId} 
	
	</update>
    
    <select id="getTotalPage" resultType="admin">
  		SELECT count(POSTID) as totalRecCount FROM adminpost
  	</select>	
  	
  	<select id="getListPage" resultType="admin" parameterType="admin">
  		<![CDATA[
  		SELECT *
  		FROM (
  			select rownum rn,
  			A.*
  			FROM (
  			select POSTID
            , POSTTITLE
            , POSTCONTENT
            , TO_CHAR(postdate, 'YYYY-MM-DD') as POSTDATE
            , POSTCNT from adminpost order by postId desc) A 
            ) 
  		where rn >= #{firstRow} AND rn <= #{endRow}
   	]]>
   	</select>
    	
  	<select id="badCommentList" resultType="admin" parameterType="admin">
  	
  		<![CDATA[
  		SELECT *
  		FROM (
  			select rownum rn,
  			A.*
  			FROM (
  			SELECT BADID
  			 , BADTITLE
  			 , TO_CHAR(BADDATE, 'YYYY-MM-DD') as BADDATE
  			 , BADWRITER
  			 , REASON
  			 , REPORTER
  			 , BADCONTENT
  			 , BADBOARD
  			 , REASONCONTENT
  			 , BADFILE
  			 , BADF_SIZE
  			 , BADF_EN from BADCOMMENT order by BADID desc) A
           ) 
  		where rn >= #{firstRow} AND rn <= #{endRow}
   	]]>
  	  	
  	</select>
  	
  	<delete id="adminBoardDelete" parameterType="admin">
  	delete from adminPost where postId = #{postId}
  	</delete>
  	
  	<insert id="saveReport" parameterType="admin">
  		INSERT INTO BADCOMMENT 
  		(BADID, BADTITLE, BADDATE, BADWRITER, REASON, REPORTER, BADCONTENT, BADBOARD, REASONCONTENT
  			<if test="badFile != null">
  			, BADFILE, BADF_SIZE, BADF_EN
  			</if>
  		 )
  		VALUES ( seq_comId.nextval, #{badTitle}, sysdate, '신고된자아이디', 
  		 #{reason}, #{reporter}, #{badContent}, #{badBoard}, #{reasonContent}
  		 	<if test="badFile != null">
  			, #{badFile}, #{badF_size}, #{badF_en}
  			</if>
  		 )

  	</insert>
  	
  	<delete id="reportRemove" parameterType="admin">
  	delete from BADCOMMENT where badId = #{badId}
  	</delete>
  
  	 <select id="getTotalReportPage" resultType="admin">
  		SELECT count(badId) as totalRecCount FROM BADCOMMENT
  	</select>
  	
  </mapper>
  	
  	
  	
  	
  	